using StackExchange.Redis;
using Prometheus; // ðŸ‘ˆ Nuevo

var builder = WebApplication.CreateBuilder(args);

// ðŸ‘‡ Forzar puerto dentro del contenedor
builder.WebHost.UseUrls("http://*:5245");

builder.Services.AddEndpointsApiExplorer();
builder.Services.AddSwaggerGen();
builder.Services.AddControllers();
builder.Services.AddHealthChecks(); // ðŸ‘ˆ Nuevo

string redisConnection = "cache-redis:6379,abortConnect=False";
builder.Services.AddSingleton<IConnectionMultiplexer>(ConnectionMultiplexer.Connect(redisConnection));

var app = builder.Build();

// ðŸ‘‡ Habilitar Swagger sin importar el entorno
app.UseSwagger();
app.UseSwaggerUI();

// ðŸ‘‡ MÃ©tricas Prometheus (NUEVO)
app.UseRouting();
app.UseHttpMetrics(); // MÃ©tricas HTTP automÃ¡ticas
app.UseEndpoints(endpoints =>
{
    endpoints.MapMetrics(); // ðŸ‘ˆ Endpoint /metrics para Prometheus
    endpoints.MapHealthChecks("/health"); // ðŸ‘ˆ Health check endpoint
});

app.UseHttpsRedirection();
app.MapControllers();
app.Run();